###########################################################################################################

x <- c(5,10,25,50)

# Calculando intervalo de confiança


dropNeighbor_valores_erro <- read.table("coverageDN.dat")
dropRandom_valores_erro <- read.table("coverageDR.dat")
dropFirst_valores_erro <- read.table("coverageDF.dat")
dropLast_valores_erro <- read.table("coverageDL.dat")
ogk_valores_erro <- read.table("coverageOGK.dat")

##########################################################################

dropNeighbor_tt5 <- t.test(dropNeighbor_valores_erro[,1])
dropNeighbor_tt10 <- t.test(dropNeighbor_valores_erro[,2])
dropNeighbor_tt25 <- t.test(dropNeighbor_valores_erro[,3])
dropNeighbor_tt50 <- t.test(dropNeighbor_valores_erro[,4])

dropNeighbor_tt <- rbind(

c(dropNeighbor_tt5$conf.int[1], dropNeighbor_tt5$estimate, dropNeighbor_tt5$conf.int[2]),
c(dropNeighbor_tt10$conf.int[1], dropNeighbor_tt10$estimate, dropNeighbor_tt10$conf.int[2]),
c(dropNeighbor_tt25$conf.int[1], dropNeighbor_tt25$estimate, dropNeighbor_tt25$conf.int[2]),
c(dropNeighbor_tt50$conf.int[1], dropNeighbor_tt50$estimate, dropNeighbor_tt50$conf.int[2])

)

##########################################################################

dropRandom_tt5 <- t.test(dropRandom_valores_erro[,1])
dropRandom_tt10 <- t.test(dropRandom_valores_erro[,2])
dropRandom_tt25 <- t.test(dropRandom_valores_erro[,3])
dropRandom_tt50 <- t.test(dropRandom_valores_erro[,4])

dropRandom_tt <- rbind(

c(dropRandom_tt5$conf.int[1], dropRandom_tt5$estimate, dropRandom_tt5$conf.int[2]),
c(dropRandom_tt10$conf.int[1], dropRandom_tt10$estimate, dropRandom_tt10$conf.int[2]),
c(dropRandom_tt25$conf.int[1], dropRandom_tt25$estimate, dropRandom_tt25$conf.int[2]),
c(dropRandom_tt50$conf.int[1], dropRandom_tt50$estimate, dropRandom_tt50$conf.int[2])

)

##########################################################################

dropFirst_tt5 <- t.test(dropFirst_valores_erro[,1])
dropFirst_tt10 <- t.test(dropFirst_valores_erro[,2])
dropFirst_tt25 <- t.test(dropFirst_valores_erro[,3])
dropFirst_tt50 <- t.test(dropFirst_valores_erro[,4])

dropFirst_tt <- rbind(

c(dropFirst_tt5$conf.int[1], dropFirst_tt5$estimate, dropFirst_tt5$conf.int[2]),
c(dropFirst_tt10$conf.int[1], dropFirst_tt10$estimate, dropFirst_tt10$conf.int[2]),
c(dropFirst_tt25$conf.int[1], dropFirst_tt25$estimate, dropFirst_tt25$conf.int[2]),
c(dropFirst_tt50$conf.int[1], dropFirst_tt50$estimate, dropFirst_tt50$conf.int[2])

)


##########################################################################

dropLast_tt5 <- t.test(dropLast_valores_erro[,1])
dropLast_tt10 <- t.test(dropLast_valores_erro[,2])
dropLast_tt25 <- t.test(dropLast_valores_erro[,3])
dropLast_tt50 <- t.test(dropLast_valores_erro[,4])

dropLast_tt <- rbind(

c(dropLast_tt5$conf.int[1], dropLast_tt5$estimate, dropLast_tt5$conf.int[2]),
c(dropLast_tt10$conf.int[1], dropLast_tt10$estimate, dropLast_tt10$conf.int[2]),
c(dropLast_tt25$conf.int[1], dropLast_tt25$estimate, dropLast_tt25$conf.int[2]),
c(dropLast_tt50$conf.int[1], dropLast_tt50$estimate, dropLast_tt50$conf.int[2])

)

##########################################################################
#Valor constante dá erro no ttest

ogk_tt5 <- mean(ogk_valores_erro[,1])
ogk_tt10 <- mean(ogk_valores_erro[,2])
ogk_tt25 <- mean(ogk_valores_erro[,3])
ogk_tt50 <- mean(ogk_valores_erro[,4])

ogk_tt <- rbind(

c(ogk_tt5, ogk_tt5, ogk_tt5),
c(ogk_tt10, ogk_tt10, ogk_tt10),
c(ogk_tt25, ogk_tt25, ogk_tt25),
c(ogk_tt50, ogk_tt50, ogk_tt50)

)

##########################################################################
y_lim <- c(min(ogk_tt, dropLast_tt, dropFirst_tt, dropRandom_tt, dropNeighbor_tt), max(ogk_tt, dropLast_tt, dropFirst_tt, dropRandom_tt, dropNeighbor_tt))
#x_lim <- x

setEPS()
postscript("grafico_cobertura.eps")

plot(x, ogk_tt[,2] ,ylim=y_lim, type='b', pch=4, col='black', ylab='Error', xlab='Percentage of data sampled')

legend("topright", legend=c("Data Centric Reduction", "Drop Last Packet Packets", "Drop First Packets", "Drop Random Packet","Based Coverage Drop Policy"), lty=1, col=c("black","red", "blue", "green", "gray"), bty="n", pch=c(4,5,6,7,8))


#matplot(x, type = "n", ylab='Erro', xlab='% dos dados', xlim = y_lim, axes = FALSE)
matpoints(, ogk_tt[,2],  pch = 4, col = 1, cex=1.2)
arrows(x, ogk_tt[,1], x, ogk_tt[,3], length = .05, angle = 90, code = 3) 
segments(x, ogk_tt[,1], x, ogk_tt[,3])
lines(1:3, ogk_tt[,1], lty = i, lwd = 1.5) 
#points(x, ogk_tt[,1], type='p', pch=4, col='black')
#points(x, ogk_tt[,3], type='p', pch=4, col='black')

points(x, dropLast_tt[,2], type='b', pch=5, col='red')
points(x, dropLast_tt[,1], type='p', pch="-", col='red')
points(x, dropLast_tt[,3], type='p', pch="-", col='red')
segments(x, dropLast_tt[,1], x, dropLast_tt[,3], col='red')

points(x, dropFirst_tt[,2], type='b', pch=6, col='blue')
points(x, dropFirst_tt[,1], type='p', pch="-", col='blue')
points(x, dropFirst_tt[,3], type='p', pch="-", col='blue')
segments(x, dropFirst_tt[,1], x, dropFirst_tt[,3], col='blue')

points(x, dropRandom_tt[,2], type='b', pch=7, col='green')
points(x, dropRandom_tt[,1], type='p', pch="-", col='green')
points(x, dropRandom_tt[,3], type='p', pch="-", col='green')
segments(x, dropRandom_tt[,1], x, dropRandom_tt[,3], col='green')

points(x, dropNeighbor_tt[,2], type='b', pch=8, col='gray')
points(x, dropNeighbor_tt[,1], type='p', pch="-", col='gray')
points(x, dropNeighbor_tt[,3], type='p', pch="-", col='gray')
segments(x, dropNeighbor_tt[,1], x, dropNeighbor_tt[,3], col='gray')

dev.off()
